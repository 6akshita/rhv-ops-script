---
- name: TVM Deployment
  hosts: localhost
  tasks:
  - name: create Trilio namespace
    command: kubectl create ns trilio
    ignore_errors: True

  - name: create Secret to pull images
    command: kubectl create -n trilio secret docker-registry regcred-trilio --docker-server=https://index.docker.io/v1/ --docker-username=trilioauto --docker-password=TrilioPassword1! --docker-email=redhat.support@trilio.io
    ignore_errors: True

  - name: create tvault_config_file configmap 
    command: kubectl apply -f /opt/manifest/configmap/tvault_config_file.yaml -n trilio

  - name: create  vault configmap
    command: kubectl apply -f /opt/manifest/configmap/vault.yaml -n trilio

  - name: create  tvr-secrets configmap
    command: kubectl apply -f /opt/manifest/configmap/tvr-secret.yaml -n trilio
        
  - name: create workloadmgr_config_file configmap
    command: kubectl apply -f /opt/manifest/configmap/workloadmgr_config_file.yaml -n trilio

  - name:  create service account and rbac
    command: kubectl apply -f /opt/manifest/service-account/rbac.yaml -n trilio
    
  - name: Create CA and Certs
    shell: |
      openssl genrsa -des3 -out CA.key -passout pass:trilio  2048 
      openssl req -x509 -new -nodes -key CA.key -passin pass:trilio  -sha256 -days 1825 -out CA.pem -batch
      openssl genrsa -out tvault.key 2048
      openssl req -new -key tvault.key -out tvault.csr -batch
      echo " 
          authorityKeyIdentifier=keyid,issuer
          basicConstraints=CA:FALSE
          keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
          subjectAltName = @alt_names
          [alt_names]
          DNS.1 = tvault.com " > tvault.ext 
          
      openssl x509 -req -in tvault.csr -CA CA.pem -CAkey CA.key -CAcreateserial -out tvault.crt -days 1825 -sha256 -extfile tvault.ext  -passin pass:trilio

  - name: create secrets for CA
    shell: kubectl create secret generic ca-certs --from-file=pem_content=CA.pem  --from-file=key_content=CA.key -n trilio
    ignore_errors: True

  - name: create secrets for Ingress
    shell: kubectl create secret tls tvault-ingress-tls2 --namespace trilio --key tvault.key --cert tvault.crt
    ignore_errors: True

  - name: Create a directory /opt/manifest/ca if it does not exist
    ansible.builtin.file:
      path: /opt/manifest/ca
      state: directory
      mode: '0755'

  - name: move certificates to /opt/manifest/ca
    shell: |
        sudo mv  CA.key  CA.pem  CA.srl  tvault.crt  tvault.csr  tvault.ext  tvault.key /opt/manifest/ca
        
  - name: Add Metallb helm repo
    command: helm repo add metallb https://metallb.github.io/metallb

  - name: Install Metallb 
    command: helm upgrade --install metallb metallb/metallb -f /opt/manifest/ingress/values.yaml

  - pause:
      minutes: 1

  - name: Add ingress helm repo
    command: helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx

  - name: Install Ingress
    command: helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx --version 4.0.1

  - name: deploy Rhvconfigurator
    command: kubectl apply -f /opt/manifest/rhvconfigurator.yaml -n trilio

  - name: deploy config-api
    command:   kubectl apply -f /opt/manifest/config-api.yaml -n trilio
 
  - name: deploy wlm-api
    command:  kubectl apply -f /opt/manifest/wlm/wlm-api.yaml -n trilio

  - name: deploy wlm-scheduler
    command:  kubectl apply -f /opt/manifest/wlm/wlm-scheduler.yaml -n trilio

  - name: deploy wlm-workloads
    command:  kubectl apply -f /opt/manifest/wlm/wlm-workloads.yaml -n trilio
 
  - name: create storage class
    command:  kubectl apply -f /opt/manifest/storageclass/localpath.yaml

  - pause:
      minutes: 1

  - name: deploy rabbitmq
    command: kubectl apply -f /opt/manifest/rabbitmq/ -n trilio

  - name: deploy mysql
    command: kubectl apply -f /opt/manifest/mysql/ -n trilio
  
  - name: create ingress rule
    command: kubectl apply -f /opt/manifest/ingress/ingressrule.yaml -n trilio


